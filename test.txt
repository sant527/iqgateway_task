https://link.getmailspring.com/link/BE568057-4E57-42AF-9F65-09387022F8E1@getmailspring.com/0?redirect=https%3A%2F%2Fdashing-sleep-927.notion.site%2FBackend-task-f643886071204a2da5efd41e7fcd7f1b&recipient=bGF0aGEubUBpcWdhdGV3YXkuY29t

from django.contrib.auth import get_user_model
User = get_user_model()
user = User.objects.create_user('u000', password='123')
user.is_allowed_to_fetch = True
user.save()
user = User.objects.create_user('u001', password='123')
user.is_allowed_to_fetch = False
user.save()
user = User.objects.create_user('u002', password='123')
user.is_allowed_to_fetch = True
user.save()
user = User.objects.create_user('u003', password='123')
user.is_allowed_to_fetch = False
user.save()
user = User.objects.create_user('u004', password='123')
user.is_allowed_to_fetch = True
user.save()
user = User.objects.create_user('u005', password='123')
user.is_allowed_to_fetch = False
user.save()
user = User.objects.create_user('u006', password='123')
user.is_allowed_to_fetch = True
user.save()
user = User.objects.create_user('u007', password='123')
user.is_allowed_to_fetch = False
user.save()
user = User.objects.create_user('u008', password='123')
user.is_allowed_to_fetch = True
user.save()



upstream webapp {
    server webapp:8000;
}

upstream jupyter {
    server jupyter:8888;
}

upstream db {
    server phppgadmin:8080;
}

upstream fast {
    server fastapi:8000;
}

upstream postgres {
    server postgresql:5432;
}

upstream postgres2 {
    server postgresql2:5432;
}



server {
    listen 80;


    location / {
        proxy_pass http://webapp;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        # https://serverfault.com/a/993559
        #proxy_read_timeout 1800;
        #proxy_connect_timeout 1800;
        #proxy_send_timeout 1800;
        #send_timeout 1800;
    }
}


server {
    listen 80 so_keepalive=on;

    server_name pgdb1.*;

    location / {
        proxy_pass http://postgres;
    }
}

server {
    listen 80 so_keepalive=on;

    server_name pgdb2.*;

    location / {
        proxy_pass http://postgres2;
    }
}



#    location /static {
#        autoindex on;
#        alias /staticfiles/;
#    }
#
#    location /media {
#        autoindex on;
#        alias /mediafiles/;
#    }


server {
    listen 80;

    server_name db.*;

    location / {
        proxy_pass http://db;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        #proxy_read_timeout 99999;
        #proxy_connect_timeout 99999;
        #proxy_send_timeout 99999;
        #send_timeout 99999;
    }

}



map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;

    server_name jyp.*;

    location / {
        # or whichever port you've set for your Jupyter
        proxy_pass http://jupyter;
        # $http_host is important for accessing Jupyter locally
        proxy_set_header Host $http_host;
        # http://nginx.org/en/docs/http/websocket.html
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}


server {
    listen 80;

    server_name fast.*;

    location / {
        proxy_pass http://fast;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

}
